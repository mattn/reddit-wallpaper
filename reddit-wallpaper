#!/usr/bin/env perl
use strict;
use warnings;

use File::Basename;
use Getopt::Long;
use Pod::Usage;
use List::MoreUtils qw/apply/;

use HTTP::Tiny;
use X11::Wallpaper qw/set_wallpaper/;

our $APP = 'reddit-wallpaper';
our $VERSION = '0.8.8';

my $output_prefix;
my $subreddit;
my $bg_mode = 'aspect';
my $cache_image;
$cache_image = $ENV{REDDIT_WALLPAPER_CACHE} if defined $ENV{REDDIT_WALLPAPER_CACHE};

GetOptions(
	"output=s" => \$output_prefix,
	"subreddit=s" => \$subreddit,
	"mode=s" => sub {
		shift;
		my ($mode) = @_;
		if ($mode !~ /^(full|tile|center|aspect)$/) {
			pod2usage(-verbose => 1);
			exit 1;
		}
		$bg_mode = $mode;
	},
	"cache!" => \$cache_image,
	"help" => sub { pod2usage(-verbose => 1); exit },
	"m|man" => sub { pod2usage(-verbose => 3); exit },
	"version" => sub { printf "%s v%s\n", $APP, $VERSION; exit }
) or exit 1;

# Apply defaults
if (not defined $output_prefix) {
	$output_prefix = $ENV{REDDIT_WALLPAPER_OUTPUT} if defined $ENV{REDDIT_WALLPAPER_OUTPUT};
	$output_prefix = "/tmp/reddit-wallpaper-$$-" unless defined $output_prefix;
}
$output_prefix = $output_prefix . (-d $output_prefix ? "/" : "");
$subreddit = get_random_subreddit() unless defined $subreddit;

# Main
my $image = get_background($subreddit, $output_prefix);
set_background($image);
remove_background($image) unless $cache_image;

# Subrutines
sub get_background {
	my ($subreddit, $output_prefix) = @_;
	my $image_path = get_random_image($subreddit);
	my $image_name = sprintf "%s-%s", $subreddit, basename($image_path);
	my $output_path = sprintf "%s%s", $output_prefix, $image_name;

	my $response = HTTP::Tiny->new->get("$image_path");
	if (!$response->{success}) {
		printf STDERR "%s, %s\n%s", $response->{status}, $response->{reason}, $response->{content};
		exit 1;
	}

	open my $fh, ">:raw", "$output_path" or die $!;
	print $fh $response->{content};
	close $fh;

	return $output_path;
}
sub set_background {
	my ($background) = @_;
	set_wallpaper($background, (
		mode => $bg_mode
	));
}
sub remove_background {
	my ($background) = @_;
	unlink $background;
}

# Utils
sub get_random_image {
	my ($subreddit) = @_;

	my $response = HTTP::Tiny->new->get("https://www.reddit.com/r/$subreddit");
	if (!$response->{success}) {
		printf STDERR "%s, %s\n%s", $response->{status}, $response->{reason}, $response->{content};
		exit 1;
	}
	my $content = $response->{content};
	# Match the following:
	# Leading 'http://' or 'https://'
	my @images;
	#   i.imgur.com/$image.jpg
	#   i.imgur.com/$image.png
	push @images, $content =~ m{(https?://?i.imgur.com/\w+.(?:jpg|png))}g;
	#   Apply replace 'imgur' with 'i.imgur' and append '.jpg' at the end:
	#     imgur.com/$image
	push @images, apply { s/(imgur.*)$/i.$1.jpg/ } $content =~ m{(https?:\/\/imgur.com/\w+)};

	die "$subreddit: $!" unless @images;
	return $images[rand @images];
}
sub get_random_subreddit {
	my @subreddits = get_subreddits();
	chomp(my $subreddit = $subreddits[rand @subreddits]);
	chomp $subreddit;
	return $subreddit;
}
sub get_subreddits {
	my @subreddits;
	if (defined $ENV{REDDIT_WALLPAPER_SUBREDDITS}) {
		local @ARGV = ($ENV{REDDIT_WALLPAPER_SUBREDDITS});
		@subreddits = <>;
	}
	@subreddits = <DATA> unless @subreddits;

	return @subreddits;
}

=pod

=head1 NAME

reddit-wallpaper - Fetch an image from reddit and set it as desktop background

=head1 SYNOPSIS

clipbored [OPTIONS]

=head1 DESCRIPTION

B<reddit-wallpaper> will fetch a random image from reddit.com ether from a specified
subreddit or a random selected from a list of SFW Porn subreddit.

=head1 OPTIONS

  -o, --output    output directory/prefix, if a directory is provided '/' will be appended
  -s, --subreddit alternative subreddit to fetch the image from
      --mode      may be 'full', 'tile', 'center' or 'aspect' (default)
  -h, --help      display this help and exit
  -m, --man       display the manual
  -v, --version   output version information and exit

=head1 REQUIREMENTS

B<reddit-wallpaper> requires B<HTTP::Tiny> and B<X11::Wallpaper>

=head1 ENVIRONMENT

You can set the following environment variables:

I<REDDIT_WALLPAPER_OUTPUT> set default output directory/prefix

I<REDDIT_WALLPAPER_SUBREDDITS> should point to a file with a line separated list of subreddits

I<REDDIT_WALLPAPER_CACHE> set default cache policy

=head1 MODE

I<full> fullscreen, stretched to fit

I<tile> tiling image from top left corner

I<center> do not stretch

I<aspect> fullscreen, preserving aspect ratio - the default

For the latter two options, the background for any borders around the image is set to black.

=head1 AUTHOR

Andreas Louv

=head1 REPORTING BUGS

Report bugs to L<use the issue tracker|https://github.com/ginkoms/reddit-wallpaper/issues>.

reddit-wallpaper homepage: L<https://github.com/ginkoms/reddit-wallpaper>

=head1 COPYRIGHT

Copyright 2016 the B<reddit-wallpaper>s L</AUTHOR> as listed above

=head1 LICENSE

This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

=cut


__DATA__
AbandonedPorn
AerialPorn
AmateurEarthPorn
AnimalPorn
ApocalypsePorn
AutumnPorn
BeachPorn
BotanicalPorn
CityPorn
DesertPorn
DestructionPorn
EarthPorn
ExposurePorn
FractalPorn
HellscapePorn
InfraredPorn
InfrastructurePorn
LakePorn
LavaPorn
MachinePorn
MacroPorn
MegalithPorn
OrganizationPorn
PolicePorn
RuralPorn
SeaPorn
SkyPorn
SpaceFlightPorn
SpacePorn
SpringPorn
SummerPorn
VillagePorn
WaterPorn
WeatherPorn
WinterPorn
